{
	"nodes":[
		{"id":"00121ca8dd540091","type":"text","text":"Terminal","x":-280,"y":-20,"width":250,"height":60,"color":"4"},
		{"id":"67d0df89316d6cc7","type":"text","text":"### **Atributos **\n\n- `public Maquina maquina`: Representa la máquina que gestiona el pago y generación de tickets.\n- `public Ticket tiket`: Referencia a un objeto `Ticket`, que representa el ticket del usuario.\n- `private double total`: Guarda el costo total del estacionamiento.\n- `private int tiketNum`: Almacena el número de identificación del ticket.\n- Componentes de la interfaz gráfica (`JPanel`, `JLabel`, `JTextField`, `JButton`).","x":80,"y":-80,"width":660,"height":300,"color":"2"},
		{"id":"bad04368020d6954","x":-1300,"y":-150,"width":840,"height":380,"color":"6","type":"text","text":"### **Métodos**\n\n#### \n\n- `public Terminal()`: Inicializa los componentes gráficos y configura la ventana (`setFrame()`).\n- `public void setFrame()`: Configura la ventana de la terminal (posición, tamaño y  título).\n- `private void Tiket1ActionPerformed(java.awt.event.ActionEvent evt)`:\n\t- Obtiene la matrícula ingresada por el usuario.\n\t- Genera un ticket si hay espacio disponible.\n\t- Muestra un mensaje con el ticket o una advertencia si el parking está lleno.\n- `private void BotonPagarActionPerformed(java.awt.event.ActionEvent evt)`:\n\t- Solicita al usuario el ID del ticket.\n\t- Calcula el tiempo de estacionamiento y el monto a pagar según la tarifa por minuto.\n\t- Muestra el precio total en la interfaz.\n- `private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)`:\n\t- Obtiene la cantidad de dinero ingresada por el usuario.\n\t- Simula un proceso de pago con una barra de carga (`BarraCarga`).\n\t- Llama a `maquina.pagarTicket()` para procesar el pago y devuelve el cambio."},
		{"id":"246f4d2924a32022","x":-955,"y":400,"width":800,"height":280,"color":"3","type":"text","text":"### **Dependencias**\n\nLa clase `Terminal` depende de:\n\n- **`Maquina`**: Para generar y buscar tickets.\n- **`Ticket`**: Representa los tickets generados.\n- **`BarraCarga`**: Simula el proceso de pago con una barra de carga.\n- **`javax.swing`**: Para la interfaz gráfica (JFrame, JPanel, JButton, JTextField, etc.).\n- **`java.time.LocalDateTime` y `Duration`**: Para calcular la duración del estacionamiento."},
		{"id":"bc0a1440b1405de6","x":-80,"y":400,"width":695,"height":200,"color":"3","type":"text","text":"### **Interacción entre clases**\n\n- `Terminal` interactúa con `Maquina` para generar, buscar y pagar tickets.\n- `Maquina` devuelve un `Ticket`, que es utilizado por `Terminal`.\n- `BarraCarga` se usa para simular el proceso de pago antes de liberar el ticket.\n- Se usa `JOptionPane` para mostrar mensajes emergentes en la interfaz"}
	],
	"edges":[
		{"id":"2270a604b2566d0a","fromNode":"00121ca8dd540091","fromSide":"bottom","toNode":"bc0a1440b1405de6","toSide":"top"},
		{"id":"3608e4f96c561c9b","fromNode":"00121ca8dd540091","fromSide":"bottom","toNode":"246f4d2924a32022","toSide":"top"},
		{"id":"428db61d31de69b1","fromNode":"00121ca8dd540091","fromSide":"left","toNode":"bad04368020d6954","toSide":"right"},
		{"id":"a7cbb8080b928e0f","fromNode":"00121ca8dd540091","fromSide":"right","toNode":"67d0df89316d6cc7","toSide":"left"}
	]
}