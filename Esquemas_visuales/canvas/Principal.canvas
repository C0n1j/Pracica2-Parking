{
	"nodes":[
		{"id":"a7f314b8a6a09c43","type":"text","text":"Principal","x":-120,"y":-20,"width":250,"height":60,"color":"4"},
		{"id":"d0ea1c9065cd4a24","x":-800,"y":-120,"width":600,"height":320,"color":"6","type":"text","text":"### **Métodos**\n\n#### `public static void main(String[] args)`\n\n- **Crea una instancia de `Maquina` con la tarifa de 0.50€ por minuto.**\n- **Muestra un menú interactivo en consola** para que el usuario pueda:\n    - **Estacionar un vehículo.**\n    - **Retirar un vehículo pagando.**\n    - **Ver el estado del parking y dinero en la máquina.**\n    - **Salir del programa.**"},
		{"id":"70754cdf4079f8ee","x":200,"y":-75,"width":440,"height":230,"color":"2","type":"text","text":"### **Atributos**\n\n- `private static Scanner scanner` → Objeto `Scanner` para leer entradas del usuario.\n- `private static Maquina maquina` → Instancia de `Maquina` para gestionar el parking."},
		{"id":"d89b9c5bd971db77","x":-675,"y":280,"width":1360,"height":600,"color":"3","type":"text","text":"### Dependencias:\n\n- **Dependencia con `Maquina`**: La clase `Principal` depende de la clase `Maquina` para interactuar con el sistema de estacionamiento, específicamente para generar tickets (`generarTicket`), pagar tickets (`pagarTicket`) y mostrar el estado del parking (`mostrarEstado`).\n    \n- **Dependencia con `Scanner`**: La clase `Principal` depende de la clase `Scanner` para recibir las entradas del usuario desde la consola.\n    \n\n### Asociaciones:\n\n- **Asociación entre `Principal` y `Maquina`**: La clase `Principal` crea una instancia de `Maquina` para interactuar con el sistema de estacionamiento. Esta asociación es de tipo \"composición\" o \"agregación\" dependiendo de la implementación de la clase `Maquina`. Es decir, `Principal` posee un objeto `Maquina` durante su ciclo de vida.\n    \n- **Asociación entre `Principal` y `Scanner`**: La clase `Principal` crea un objeto `Scanner` para recibir la entrada del usuario.\n    \n\n### Interacción:\n\n- **Interacción entre `Principal` y `Maquina`**: Dentro del ciclo `while`, el usuario elige una opción y el programa invoca métodos de la clase `Maquina` según la opción seleccionada:\n    \n    - Si elige la opción 1, el programa pide la matrícula de un vehículo y luego llama al método `generarTicket` de `Maquina` para crear un ticket.\n    - Si elige la opción 2, el programa solicita el ID del ticket y la cantidad de dinero, y luego llama al método `pagarTicket` de `Maquina` para procesar el pago.\n    - Si elige la opción 3, llama al método `mostrarEstado` de `Maquina` para mostrar el estado del parking.\n- **Interacción entre `Principal` y `Scanner`**: El objeto `Scanner` se usa dentro de `Principal` para recibir datos de entrada del usuario, tales como la opción del menú, la matrícula del vehículo, el ID del ticket y la cantidad de dinero."}
	],
	"edges":[
		{"id":"0627a146ea203ca9","fromNode":"a7f314b8a6a09c43","fromSide":"right","toNode":"70754cdf4079f8ee","toSide":"left"},
		{"id":"ac3d544fe3774a39","fromNode":"a7f314b8a6a09c43","fromSide":"left","toNode":"d0ea1c9065cd4a24","toSide":"right"},
		{"id":"63407f673deac232","fromNode":"a7f314b8a6a09c43","fromSide":"bottom","toNode":"d89b9c5bd971db77","toSide":"top"}
	]
}